// The BooksService
service BooksService {
  // Get a specific book.
  rpc GetBook(GetBookRequest) returns (Book) {
    option (google.api.http) = {
      get: "/resources/store/v1/{name=books/*}"
    };
    option (google.api.method_signature) = "name";
  }
  // List all available books.
  rpc ListBooks(ListBooksRequest) returns (ListBooksResponse) {
    option (google.api.http) = {
      get: "/resources/books/v1/books"
    };
  }
  // Create a book
  rpc CreateBook(CreateBookRequest) returns (Book) {
    option (google.api.http) = {
      post: "/resources/books/v1/books"
      body: "book"
    };
    option (google.api.method_signature) = "book,book_id";
  }
}

// The definition of a book resource.
message Book {
  // The name of the book.
  // Format: books/{book}.
  string name = 1 [(google.api.field_behavior) = OUTPUT_ONLY];

  // The display name of the book.
  string display_name = 2 [(google.api.field_behavior) = REQUIRED];

  // The authors of the book.
  repeated string authors = 3 [(google.api.field_behavior) = REQUIRED];

  // The publisher of the book
  string publisher = 4 [(google.api.field_behavior) = REQUIRED];
}

// Request message for the GetBook method
message GetBookRequest {
  // The name of the book to retrieve.
  // Format: books/{book}
  string name = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference) = {
      type: "library.googleapis.com/Book"
    }];
}

// Request message for the ListBooks method
message ListBooksRequest {
  // The parent, which owns this collection of books.
  // Format:
  //  - publishers/{publisher}
  //  - authors/{author}
  string parent = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference) = {
      child_type: "library.googleapis.com/Book"
    }];

  // The maximum number of books to return. The service may return fewer than
  // this value.
  // If unspecified, at most 50 books will be returned.
  // The maximum value is 1000; values above 1000 will be coerced to 1000.
  int32 page_size = 2;

  // A page token, received from a previous `ListBooks` call.
  // Provide this to retrieve the subsequent page.
  //
  // When paginating, all other parameters provided to `ListBooks` must match
  // the call that provided the page token.
  string page_token = 3;
}
// Response message for the ListBooks method
message ListBooksResponse {
  // The books from the specified publisher.
  repeated Book books = 1;

  // A token, which can be sent as `page_token` to retrieve the next page.
  // If this field is omitted, there are no subsequent pages.
  string next_page_token = 2;
}